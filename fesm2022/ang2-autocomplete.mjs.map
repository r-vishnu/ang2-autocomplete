{"version":3,"file":"ang2-autocomplete.mjs","sources":["../../../projects/ang2-autocomplete/src/lib/ang2-autocomplete.service.ts","../../../projects/ang2-autocomplete/src/lib/ang2-autocomplete.component.ts","../../../projects/ang2-autocomplete/src/lib/ang2-autocomplete.html","../../../projects/ang2-autocomplete/src/public-api.ts","../../../projects/ang2-autocomplete/src/ang2-autocomplete.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http'\r\nimport {map} from 'rxjs'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Ang2AutocompleteService {\r\n  filteredList:any = []\r\n  constructor(private http: HttpClient) { }\r\n\r\n  searchUser(param:string, sourceName:string, urlParamName:string) {\r\n    // var params = new HttpParams();\r\n    // params.set(urlParamName,  param);\r\n    console.log(urlParamName,\" ****************** \",param);\r\n    const params = new HttpParams({fromString: `${urlParamName}=${param}`});\r\n    // return this.http.get(sourceName, { \"search\": params })\r\n    //     .map(function (res) { return res.json(); });\r\n    return this.http.get(sourceName,{params:params})\r\n};\r\n}\r\n","import { Component, ElementRef, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ang2AutocompleteService } from './ang2-autocomplete.service';\r\nimport {\r\n  state,\r\n  style,\r\n  animate,\r\n  transition\r\n} from '@angular/animations';\r\n@Component({\r\n  selector: 'ang2-autocomplete',\r\n  imports: [FormsModule,CommonModule],\r\n  host: { '(document:click)': 'handleClick($event)' },\r\n  templateUrl: 'ang2-autocomplete.html',\r\n  styleUrl: './ang2-autocomplete.component.css'  \r\n})\r\nexport class Ang2AutocompleteComponent {\r\n  pendingRequest: any = null;\r\n  statesss = 'out';\r\n  query = '';\r\n  activeElement:number = 0;\r\n\r\n  @Input() keyName: string = '';\r\n  @Input() source: any;\r\n  @Input() placeholder: string = '';\r\n  @Input() listFormatter: any;\r\n  @Input() pathToArray: string = '';\r\n  @Input() urlParamName: string = '';\r\n  @Input() labelName: string = '';\r\n  @Input() minCharLength: number = 0;\r\n  @Output() onSelectionChange = new EventEmitter<any>();\r\n\r\n\r\n  constructor(public getListService: Ang2AutocompleteService, private elementRef: ElementRef) { }\r\n\r\n  handleClick(event: any) {\r\n    if (!this.elementRef.nativeElement.contains(event.target)) {\r\n      this.focusout();\r\n    }\r\n  };\r\n\r\n\r\n  getDataFromArray(data: any) {\r\n\r\n    this.getListService.filteredList = data.filter((el: any) => {\r\n      let content = (el[this.keyName]) ? el[this.keyName] : el;\r\n      return content.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\r\n    });\r\n    this.statesss = 'in';\r\n  }\r\n\r\n  getDataFromObject(res: any) {\r\n    if(this.pathToArray){\r\n      let pathArray = this.pathToArray.split(\".\");\r\n      let raw = res;\r\n      for (let i = 0; i < pathArray.length; i++) {\r\n        let a = pathArray[i];\r\n        raw = raw[a];\r\n      }\r\n      this.getDataFromArray(raw);\r\n    }else{\r\n      this.getDataFromArray(res);\r\n    }\r\n  };\r\n\r\n  getDataFromUrl() {\r\n    if (this.pendingRequest) {\r\n      this.pendingRequest.unsubscribe();\r\n    }\r\n    \r\n    this.pendingRequest = this.getListService.searchUser(this.query.toLowerCase(), this.source, this.urlParamName)\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        this.getDataFromObject(res)});\r\n  };\r\n\r\n  isArray() {\r\n    return (this.source.constructor.name === \"Array\");\r\n  };\r\n  isObject() {\r\n    return (this.source.constructor.name === \"Object\");\r\n  };\r\n\r\n  filter(e:any) {\r\n    if(e.keyCode == 40){\r\n      ++this.activeElement;\r\n    }else if(e.keyCode == 38){\r\n      --this.activeElement;\r\n    }\r\n    else if(e.keyCode == 13 && this.getListService.filteredList[this.activeElement]){\r\n      this.select(this.getListService.filteredList[this.activeElement]);\r\n      return;\r\n    }\r\n    if(this.activeElement <0 || this.activeElement > this.getListService.filteredList.length-1){\r\n      this.activeElement = 0;      \r\n    }\r\n    if(e.keyCode == 40 || e.keyCode == 38){\r\n      return;\r\n    }\r\n\r\n    if (this.query !== \"\" && this.query.length >= this.minCharLength) {\r\n      if (this.isArray()) {\r\n        this.getDataFromArray(this.source);\r\n      }\r\n      else if (this.isObject()) {\r\n        this.getDataFromObject(this.source);\r\n      }\r\n      else {\r\n        this.getDataFromUrl();\r\n      }\r\n    }\r\n    else {\r\n      this.statesss = 'out';\r\n      setTimeout(() => this.getListService.filteredList = [], 899);\r\n    }\r\n  }\r\n\r\n\r\n  getFormattedList(data: any) {\r\n    let formatter = this.listFormatter || this.defaultListFormatter;\r\n    // const fn = new Function(`return ${formatter}(${[data]})`);\r\n    // fn([data]);\r\n    return formatter.apply(this, [data]);\r\n  };\r\n  defaultListFormatter(data: any) {\r\n    var html = \"\";\r\n    var content = (data[this.keyName]) ? data[this.keyName] : data;\r\n    html += \"<span>\" + content + \"</span>\";\r\n    return html;\r\n  };\r\n  focusout() {\r\n    if (this.pendingRequest) {\r\n      this.pendingRequest.unsubscribe();\r\n    }\r\n    this.statesss = 'out';\r\n    setTimeout(() => this.getListService.filteredList = [], 899);\r\n  };\r\n  select(item: any) {\r\n    let data = (item[this.keyName]) ? item[this.keyName] : item;\r\n    this.query = data;\r\n    this.getListService.filteredList = [];\r\n    this.onSelectionChange.emit(item);\r\n  }\r\n\r\n  focusOnOptions(e:any){\r\n    \r\n    ++this.activeElement;\r\n    console.log(this.activeElement , \" %%%%%%%%%%%%% \")\r\n  }\r\n\r\n}\r\n","<div class=\"ang2-autocomplete-container\">\r\n    @if (labelName) {\r\n    <label class=\"ang2-autocomplete-search-label\" id=\"ang2-search-label\" for=\"country\">{{labelName}}</label>\r\n    }\r\n    <input autocomplete=\"off\"\r\n     placeholder={{placeholder}} id=\"ang2searchField\"\r\n        type=\"text\" class=\"validate filter-input ang2-autocomplete-search-input\" [(ngModel)]=query (keyup)=filter($event)>\r\n    @if (getListService.filteredList.length > 0) {\r\n    <ul class=\"ang2-autocomplete-suggestions-list-container\">\r\n        @for (item of getListService.filteredList; let idx = $index; track idx) {\r\n        <li class=\"ang2-autocomplete-suggestions-list\"\r\n        [ngClass]=\"{ 'suggestions_active': idx == activeElement}\"\r\n         (click)=\"select(item)\"\r\n            [innerHTML]=\"getFormattedList(item)\">\r\n        </li>\r\n        }\r\n    </ul>\r\n    }\r\n</div>","/*\r\n * Public API Surface of ang2-autocomplete\r\n */\r\n\r\nexport * from './lib/ang2-autocomplete.service';\r\nexport * from './lib/ang2-autocomplete.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.Ang2AutocompleteService"],"mappings":"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"}